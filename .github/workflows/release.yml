name: release

on:
  push:
    # tags: 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  upload_assets:
    needs: create_release
    strategy:
      matrix:
        include:
          - os: debian-buster
            artifact_name: pc
            asset_name: pc-linux-x64.tar.gz
    runs-on: ${{ matrix.os }}
    steps:
    - name: checkout the source code
      uses: actions/checkout@v2
    - name: Install dependencies and build
      run: |
        apt-get update && apt-get install -y build-essential wget cmake pkg-config libssl-dev \
        openssl git gcc clang libclang-dev curl vim unzip screen bash \
        && curl https://getsubstrate.io -sSf | bash -s -- --fast \
        && . ~/.cargo/env \
        && wget -O - https://sh.rustup.rs | sh -s -- -y \
        && PATH=$PATH:/root/.cargo/bin \
        && rustup update stable \
        && rustup update nightly \
        && rustup toolchain install nightly-2020-02-17 \
        && rustup target add wasm32-unknown-unknown --toolchain nightly-2020-02-17 \
        && rustup default nightly-2020-02-17 \
        && rustup override set nightly-2020-02-17 \
        && cargo version \
        && rustc --version \
        && cargo build --release
    - name: compress
      uses: master-atul/tar-action@v1.0.2
      with:
        command: c
        cwd: ./target/release
        files: |
          ${{ matrix.artifact_name }}
        outPath: ./target/release/${{ matrix.asset_name }}
    - name: upload release assets
      id: upload-release-assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./target/release/${{ matrix.asset_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/tar+gzip
