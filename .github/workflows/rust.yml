name: CI

on: [push, pull_request]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@master

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - name: Install WASM toolchain
        run: rustup target add wasm32-unknown-unknown --toolchain nightly

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@master

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly

      - name: Install WASM toolchain
        run: rustup target add wasm32-unknown-unknown --toolchain nightly

      # Runs integration tests in the runtime/tests folder
      - name: Run Integration Tests across all runtime modules
        run: |
          cargo test -p node-runtime

      # Runs unit tests in each runtime module of the pallet folder
      - name: Run Unit Tests in each runtime module
        run: |
          cargo test -p roaming-operators &&
          cargo test -p roaming-networks &&
          cargo test -p roaming-organizations &&
          cargo test -p roaming-network-servers &&
          cargo test -p roaming-devices &&
          cargo test -p roaming-routing-profiles &&
          cargo test -p roaming-service-profiles &&
          cargo test -p roaming-accounting-policies &&
          cargo test -p roaming-agreement-policies &&
          cargo test -p roaming-network-profiles &&
          cargo test -p roaming-device-profiles &&
          cargo test -p roaming-sessions &&
          cargo test -p roaming-billing-policies &&
          cargo test -p roaming-charging-policies &&
          cargo test -p roaming-packet-bundles &&
          cargo test -p mining-speed-boosts-configuration-token-mining &&
          cargo test -p mining-speed-boosts-configuration-hardware-mining &&
          cargo test -p mining-speed-boosts-rates-token-mining &&
          cargo test -p mining-speed-boosts-rates-hardware-mining &&
          cargo test -p mining-speed-boosts-sampling-token-mining &&
          cargo test -p mining-speed-boosts-sampling-hardware-mining &&
          cargo test -p mining-speed-boosts-eligibility-token-mining &&
          cargo test -p mining-speed-boosts-eligibility-hardware-mining &&
          cargo test -p mining-speed-boosts-claims-token-mining &&
          cargo test -p mining-speed-boosts-claims-hardware-mining

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@master

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install nightly toolchain for rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Initialize WASM build environment
        run: |
          rustup update nightly
          rustup update stable
          rustup target add wasm32-unknown-unknown --toolchain nightly

      - name: Run cargo fmt
        run: cargo +nightly fmt --all -- --check

      - name: Run cargo clippy
        # uses: actions-rs/cargo@v1
        # with:
        #   command: clippy
        #   args:  --release -- -D warnings
        # FIXME - temporary fix below. See https://github.com/rust-lang/rust-clippy/issues/5094#issuecomment-579116431
        run: cargo +nightly clippy-preview -Zunstable-options
